设计模式中设计到的uml图
详细地址  https://www.processon.com/view/5c7d18a5e4b043f594d1567a
个人理解：
简单工厂：客户端需要知道对应的方法参数，手动new一个需要的工厂，调用对应工厂提供的方法即可。
    缺点：若增加新的产品时需要修改代码逻辑，违背开闭原则。
工厂方法：客户端需要手动生成对应的工厂，调用工厂提供的统一方法，每种工厂提供的方法一样，客户单不用分别调用
 需要增加新的产品时，可以增加对应的新工厂类即可。改善了违背开闭原则的问题。
    缺点：需要多种产品时则需要多个类，会使类更加的多，维护性差。
抽象工厂：客户端需要什么产品，则对应生成对应的工厂，工厂负责生产各类产品（产品族：某个品牌或者口味的产品）。
如实例中需要增加辣味的食物时，对应的工厂增加生产辣味食物的方法即可。
   缺点：增加新的产品时，抽象类需要修改，每个工厂都需要实现对应的方法，违背开闭原则。
